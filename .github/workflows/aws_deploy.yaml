name: AWS deploy
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      print_tags:
        description: 'True to print to STDOUT'
        required: true
        type: boolean
      tags:
        description: 'Test scenario tags'
        required: false
        type: string
      environment:
        description: 'Environment to run tests against'
        type: enviroment
        required: false

jobs:
  Deploy-caldera-server:
    runs-on: ubuntu-latest
#    if:  ${{ inputs.print_tags }}
    env:
      TF_DATA_DIR: ${{ github.WORKSPACE }}/AWS_infra
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Check out the code
        uses: actions/checkout@v3
      - name: Install python 3
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: Install AWS cli
        uses: aws-actions/setup-sam@v2
        with:
          version: 2.7.5
      - name: Install terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4
      - name: Verify Terraform version
        run: terraform --version
      - name: Terraform init
        run: |
          cd ${{ env.TF_DATA_DIR }}
          terraform init -input=false
      - name: Terraform validation
        run: |
          cd ${{ env.TF_DATA_DIR }}
          terraform validate
      - name: Terraform plan
        run: |
          cd ${{ env.TF_DATA_DIR }}
          terraform plan  -no-color -target=aws_instance.caldera_server -detailed-exitcode -out=deploy.out
      - name: Listar los ficheros
        if: ${{ always() }}
        run: ls -lart $TF_WORKSPACE

